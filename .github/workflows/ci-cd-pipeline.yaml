name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: 🏗 Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout Code
        uses: actions/checkout@v3

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🏗 Build Without Tests
        run: mvn clean install -DskipTests


  docker-build-push:
    name: 🐳 Build & Push Docker Image
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout Code
        uses: actions/checkout@v3

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🏗 Run Maven Build (Ensure JAR is Created)
        run: mvn clean package -DskipTests  # Ensure JAR is built

      - name: 🔍 Debug - Check If Target Exists
        run: ls -l  # Check if 'target/' is present in the repo

      - name: 🔍 Debug - Check Target Directory
        run: ls -l target  # Verify JAR file inside target/

      - name: 🔑 Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PAT }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 📦 Build Docker Image
        run: |
          docker build -t chandreyees20/demo-api:latest .
          docker tag chandreyees20/demo-api:latest chandreyees20/demo-api:${{ github.sha }}

      - name: 🚀 Push Docker Image
        run: |
          docker push chandreyees20/demo-api:latest
          docker push chandreyees20/demo-api:${{ github.sha }}

  deploy-to-k8s:
    name: 🚀 Deploy to Kubernetes
    needs: docker-build-push
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout Code
        uses: actions/checkout@v3

      - name: ⚙ Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: 🚀 Apply Kubernetes Manifests
        run: |
          kubectl apply -f k8s/postgres.yaml
          kubectl apply -f k8s/deployment.yaml

      - name: ✅ Verify Deployment
        run: kubectl get pods
